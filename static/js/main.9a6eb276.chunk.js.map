{"version":3,"sources":["components/card/card.component.jsx","logo.svg","components/card-list/card-list.component.jsx","components/search/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","monster","id","src","name","email","CardList","monsters","map","monsterIdx","Search","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","filteredMonsters","this","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,GCHE,I,kBDGK,SAACC,GACjB,OAAO,sBAAKC,UAAU,iBAAf,UACH,qBAAKC,IAAG,iBAAYF,EAAMG,QAAQC,IAAMC,IAAG,+BACfL,EAAMG,QAAQC,GADC,eAG3C,6BAAKJ,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aEJbC,EAAW,SAACR,GACrB,OAAO,qBAAKC,UAAU,YAAf,SAECD,EAAMS,SAASC,KAAI,SAACP,EAASQ,GAAV,OACf,cAAC,EAAD,CAEIR,QAASA,GADJQ,SCPZC,G,MAAS,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aACjC,OAAO,uBACHb,UAAU,SACVc,KAAK,SACLF,YAAY,kBACZG,SAAUF,MC+BHG,E,kDAhCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXT,SAAU,GACVU,YAAa,IAJH,E,gEAQO,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAChB,SAAUe,S,+BAGlC,IAAD,OACDE,EAAmBC,KAAKT,MAAMT,SAASmB,QAC3C,SAAAzB,GAAO,OAAIA,EAAQG,KAAKuB,cAAcC,SAAS,EAAKZ,MAAMC,YAAYU,kBAExE,OACE,sBAAK5B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEY,YAAY,kBACZC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAExD,cAAC,EAAD,CAAUxB,SAAUiB,W,GA1BZQ,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9a6eb276.chunk.js","sourcesContent":["import React from \"react\"\nimport './card.styles.css'\n\nexport const Card = (props) => {\n    return <div className=\"card-container\">\n        <img alt={`monster${props.monster.id}`} src={\n            `https://robohash.org/${props.monster.id}?set=set2`\n        }></img>\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n}","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react'\nimport './card-list.styles.css'\n\nimport { Card } from '../card/card.component.jsx'\n\nexport const CardList = (props) => {\n    return <div className=\"card-list\">\n        {\n            props.monsters.map((monster, monsterIdx) => (\n                <Card\n                    key={monsterIdx}\n                    monster={monster}\n                />\n            ))\n        }\n    </div>\n}","import React from 'react'\nimport './search.styles.css'\n\nexport const Search = ({placeholder, handleChange}) => {\n    return <input\n        className=\"search\"\n        type=\"search\"\n        placeholder=\"search monsters\"\n        onChange={handleChange}\n    ></input>\n}","import { Component } from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component.jsx';\nimport { Search } from './components/search/search.component.jsx';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monsters: users}))\n  }\n\n  render() {\n    const filteredMonsters = this.state.monsters.filter(\n      monster => monster.name.toLowerCase().includes(this.state.searchField.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <Search\n          placeholder=\"search monsters\"\n          handleChange={e => this.setState({searchField: e.target.value})}\n        ></Search>\n          <CardList monsters={filteredMonsters}>\n          </CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}